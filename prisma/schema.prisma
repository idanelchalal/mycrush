// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Message {
  chat Chat @relation(fields: [chatId], references: [id], onDelete: Cascade)

  id         String @id @default(auto()) @map("_id") @db.ObjectId
  senderId   String @db.ObjectId
  receiverId String @db.ObjectId
  chatId     String @db.ObjectId
  content    String
  createdAt DateTime @default(now())
}

model Chat {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  participantsIds String[] @db.ObjectId
  messages        Message[]
  createdAt   DateTime @default(now())
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  location         Json?     @db.Json
  maxDistance      Int       @default(5000)
  likedProfiles    String[]
  dislikedProfiles String[]
  matchedProfiles  String[]
  name             String?
  email            String    @unique
  emailVerified    DateTime?
  image            String?
  accounts         Account[]
  sessions         Session[]
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String?  @db.String
  token      String   @unique @db.String
  expires    DateTime

  @@unique([identifier, token])
}
